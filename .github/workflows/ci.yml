name: Continuous integration

on:
  push:
  pull_request:
    branches:
      - develop
      - main

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    steps:

      - name: Set Up Mysql 8
        run: |
          echo -e "Enable LOAD DATA LOCAL INFILE in my.cnf\n"
          echo -e "SETTING secure-file-priv TO EMPTY STRING\n"
          echo -e "[mysqld]\nsecure-file-priv=''" | sudo tee -a /etc/mysql/my.cnf
          echo -e "SETTING local_infile TO ON\n"
          echo -e "[mysqld]\nlocal_infile='ON'" | sudo tee -a /etc/mysql/my.cnf
          echo -e "Start MYSQL service, it is off by default\n"
          sudo systemctl enable mysql.service
          sudo systemctl start mysql.service
          echo -e "Creating Laravel Database\n"
          mysql --host 127.0.0.1 -uroot -proot -e 'CREATE DATABASE IF NOT EXISTS laravel;'
          echo -e "Check new settings\n"
          mysql --host 127.0.0.1 -uroot -proot -e "SELECT @@global.secure_file_priv, @@global.local_infile"

      - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
        with:
          php-version: '8.0'

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist --no-suggest

      - name: Check code style
        run: composer run-script phpcs-validate

      - name: Set up Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Install NPM dependencies
        run: npm install

      #- name: Compile assets for production
      #  run: npm run production

      - name: Check javaScript code style
        run: npm run eslint-ci

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Prepare the application ðŸ”§
        run: |
          rm .env.testing
          cp .env.ci .env
          php artisan key:generate

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: composer run-script testdox

      - name: Execute javaScript tests
        run: npm test

      - name: Prepare paths for SonarQube analysis
        run: |
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" phpunit.report.xml
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" coverage.xml
          sed -i "s|$GITHUB_WORKSPACE|/github/workspace|g" build/jest/coverage/lcov.info

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
